// Package api Code generated by swaggo/swag. DO NOT EDIT
package api

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "用户登陆",
                "parameters": [
                    {
                        "type": "string",
                        "default": "123456",
                        "description": "密码",
                        "name": "password",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "admin",
                        "description": "用户名",
                        "name": "username",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ginkit.SwaggerResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.AuthLoginResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ginkit.SwaggerResponseInvalidParam"
                        }
                    }
                }
            }
        },
        "/auth/send_code": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "发送验证码",
                "parameters": [
                    {
                        "description": "发送验证码",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AuthSendCodeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ginkit.SwaggerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ginkit.SwaggerResponseInvalidParam"
                        }
                    }
                }
            }
        },
        "/auth/user_info": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "获取当前登陆用户信息",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ginkit.SwaggerResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.AuthUserInfoResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ginkit.SwaggerResponseUnauthorized"
                        }
                    }
                }
            }
        },
        "/auth/username_available": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "验证用户名可用性",
                "parameters": [
                    {
                        "type": "string",
                        "default": "admin",
                        "name": "username",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ginkit.SwaggerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ginkit.SwaggerResponseInvalidParam"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.AuthLoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "description": "token",
                    "type": "string",
                    "default": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MjE4NzI3ODUsInVzZXJfaWQiOjEsInVzZXJuYW1lIjoiYWRtaW4ifQ.ZNgtQlyfVacyBg_ZouF4C3CpiMVxIaWXrh_a1i-OiAw"
                }
            }
        },
        "dto.AuthSendCodeRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "default": "example@example.com"
                }
            }
        },
        "dto.AuthUserInfoResponse": {
            "type": "object",
            "properties": {
                "userId": {
                    "description": "用户 id",
                    "type": "integer",
                    "default": 1
                },
                "username": {
                    "description": "用户名",
                    "type": "string",
                    "default": "admin"
                }
            }
        },
        "ginkit.SwaggerResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "default": 0
                },
                "message": {
                    "type": "string",
                    "default": "Success"
                }
            }
        },
        "ginkit.SwaggerResponseInvalidParam": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "default": 400
                },
                "message": {
                    "type": "string",
                    "default": "Invalid parameters in request"
                }
            }
        },
        "ginkit.SwaggerResponseUnauthorized": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "default": 401
                },
                "message": {
                    "type": "string",
                    "default": "Unauthorized"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Iam API",
	Description:      "authorization",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
